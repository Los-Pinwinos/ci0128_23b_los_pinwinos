@page
@model LoCoMPro.Pages.Moderacion.OutliersPrecioModel
@{
    ViewData["Title"] = "Registros de precio anómalo";
}

<head>
    <title>Registros de precio alejado</title>
    <!-- Incluye su archivo de estilo CSS específico -->
    <link rel="stylesheet" href="~/css/Pages/Moderacion/OutliersPrecio.css" asp-append-version="true"/>
    <!-- Incluye su archivo de cliente -->
    <script src="~/js/Pages/Moderacion/OutliersPrecio/cliente.js" asp-append-version="true"></script>
    <!-- Incluye la paginación -->
    <script src="~/js/Pages/Cuenta/paginador.js" asp-append-version="true"></script>
    <script>
        // Habilitar paginacion
        paginacionHabilitada = true;

        // Función de traducción de codificación
        function traducirCodificacion(cadena) {
            var elementoTemporal = document.createElement("div");
            elementoTemporal.innerHTML = cadena;
            return elementoTemporal.textContent;
        }

        // Obtener resultados de busqueda principal
        function obtenerResultados() {
            var resultadosDecodificados = traducirCodificacion('@Model.outliers');
            return JSON.parse(resultadosDecodificados);
        }

        // Cliente
        if ('@Model.outliers' != "Sin resultados") {
            var resultados = obtenerResultados();
            var paginador = new Paginador(@Model.resultadosPorPagina);
            var paginaDefault = @Model.paginaDefault;
        }
    </script>
</head>

<body>
    <div>
        <div class="Contenedor-fila" id="ContenedorPrincipal" style="display: flex; justify-content: center;">
            @if (Model.outliers != "Sin resultados")
            {
                <!-- Tabla de resultados -->
                <div class="Tabla">
                    <table>
                        <caption style="display:none;">Tabla de registros con precios anómalos</caption>
                        <thead>
                            <tr>
                                <th></th>
                                <th>
                                    <!-- Columna con el nombre -->
                                    @Html.DisplayNameFor(model => model.registrosVM.producto)
                                </th>
                                <th style="padding-left:42px;">
                                    <!-- Columna con el precio -->
                                    @Html.DisplayNameFor(model => model.registrosVM.precio)
                                </th>
                                <th style="padding-left:32px;">
                                    <!-- Columna con el precio minimo -->
                                    @Html.DisplayNameFor(model => model.registrosVM.minimo)
                                </th>
                                <th style="padding-left:25px;">
                                    <!-- Columna con el precio maximo -->
                                    @Html.DisplayNameFor(model => model.registrosVM.maximo)
                                </th>
                                <th>
                                    <!-- Columna con la desviación estándar del precio -->
                                    @Html.DisplayNameFor(model => model.registrosVM.desviacionEstandar)
                                </th>
                                <th style="padding-left:15px;">
                                    <!-- Columna con el promedio del precio -->
                                    @Html.DisplayNameFor(model => model.registrosVM.promedio)
                                </th>
                                <th>
                                    <!-- Columna con la tienda -->
                                    @Html.DisplayNameFor(model => model.registrosVM.tienda)
                                </th>
                                <th>
                                    <!-- Columna con la provincia -->
                                    @Html.DisplayNameFor(model => model.registrosVM.provincia)
                                </th>
                                <th>
                                    <!-- Columna con el cantón -->
                                    @Html.DisplayNameFor(model => model.registrosVM.canton)
                                </th>
                            </tr>
                        </thead>
                        <tbody class="Tabla-resultados" id="CuerpoResultados"></tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="Contenedor-gif">
                    <img src="~/img/Pinwino_feliz.gif" alt="Pinwino feliz" class="Gif" id="PinwinoFeliz">
                    <p class="Texto">No hay precios anómalos</p>
                </div>
            }
        </div>
    </div>

    @if (Model.outliers != "Sin resultados")
    {
        <!-- Paginación -->
        <div class="Contenedor-paginacion">
            <div class="Contenedor-caja-paginacion">
                <!-- Botón anterior -->
                <div id="PaginaPrevia" class="Boton-paginacion" onclick="pasarPagina(registrosPag.IndicePagina - 1)">Anterior</div>
                <div id="SinPaginaPrevia" class="Boton-paginacion-deshabilitado"> Anterior </div>

                <!-- Botones de número de página -->
                <span id="NumerosPaginacion" class="Numeros-paginacion"></span>

                <!-- Botón siguiente -->
                <div id="PaginaSiguiente" class="Boton-paginacion" onclick="pasarPagina(registrosPag.IndicePagina + 1)">Siguiente</div>
                <div id="SinPaginaSiguiente" class="Boton-paginacion-deshabilitado">Siguiente</div>
            </div>
        </div>
    }

    <button class="Boton" type="submit" id="Eliminar" onclick="confirmarAccion();">Eliminar</button>
</body>

<!-- Script para mostrar un popUp y redireccionar -->
<script>
    var redireccionar = "@ViewData["MensajeRedireccion"]";
    if (redireccionar) {
        alert("Debe presentar permisos de moderador para acceder a esta página");
        window.location.href = "/Home/Index";
    }
</script>

<!-- Script para renderizar los resultados de la tabla inicialmente -->
<script>
    if ('@Model.outliers' != "Sin resultados") {
        // Se limpia el storage local
        localStorage.clear();

        var registrosPag = paginar(paginaDefault);

        // Renderizar
        renderizarPaginacion();
        renderizarTabla(registrosPag);
    }
</script>